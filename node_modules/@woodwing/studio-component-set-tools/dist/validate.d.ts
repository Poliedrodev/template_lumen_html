import { ComponentSet, GetFileContentType, GetFileSize } from './models';
import { Validator } from './validators';
export declare const readFile: GetFileContentType;
export declare const getSize: GetFileSize;
/**
 * Validates a components package based on folder path.
 *
 * @param folderPath Path to folder containing the components.
 */
export declare function validateFolder(folderPath: string): Promise<boolean>;
/**
 * Validates a components package given an array of paths
 * and a function to get the file content.
 *
 * @param filePaths normalized paths to files, relative to root folder of components package
 * @param getFileContent an async function that resolves with the file content
 * @param getFileSize an async function that resolves with the file size
 * @param errorReporter called when there is a validation error
 */
export declare function validate(filePaths: Set<string>, getFileContent: GetFileContentType, getFileSize: GetFileSize, errorReporter: (errorMessage: string) => void): Promise<boolean>;
/**
 * Validates the total file size of the component set package.
 *
 * @param size component set package size in bytes
 * @param errorReporter called when there is a validation error
 */
export declare function validatePackageSize(size: number, errorReporter: (errorMessage: string) => void): boolean;
/**
 * Returns set of validators according to component definition version
 */
export declare function getValidators(version: string, error: (errorMessage: string) => false, componentSet: ComponentSet, filePaths: Set<string>, getFileContent: GetFileContentType, getFileSize: GetFileSize): Validator[] | null;
