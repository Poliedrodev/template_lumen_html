"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomStylesValidator = void 0;
const validator_1 = require("./validator");
const path = require("path");
class CustomStylesValidator extends validator_1.Validator {
    constructor(error, definition, filePaths) {
        super(error, definition);
        this.filePaths = filePaths;
    }
    validate() {
        return __awaiter(this, void 0, void 0, function* () {
            this.checkCustomStylesFolder();
            if (!this.componentSet.customStyles) {
                return;
            }
            this.componentSet.customStyles.forEach((customStyle) => this.validateDefaultCustomStyleExists(customStyle));
        });
    }
    checkCustomStylesFolder() {
        if (Array.from(this.filePaths).some((file) => file.toLowerCase().startsWith(path.normalize('styles/customstyles/')))) {
            this.error(`The "styles" directory can't contain a directory called "customStyles".`);
        }
    }
    validateDefaultCustomStyleExists(customStyle) {
        if (!customStyle.default) {
            return;
        }
        if (!this.filePaths.has(path.normalize(customStyle.default))) {
            this.error(`The default file for custom style "${customStyle.label}" does not exist`);
        }
    }
}
exports.CustomStylesValidator = CustomStylesValidator;
//# sourceMappingURL=custom-styles-validator.js.map