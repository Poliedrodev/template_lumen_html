"use strict";
/**
 * Validates if conversion shortcuts components are exist
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionShortcutsValidator = void 0;
const validator_1 = require("./validator");
class ConversionShortcutsValidator extends validator_1.Validator {
    validate() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.componentSet.shortcuts || !this.componentSet.shortcuts.conversionComponents) {
                return;
            }
            this.componentSet.shortcuts.conversionComponents.forEach((componentName) => {
                if (!(componentName in this.componentSet.components)) {
                    this.error(`Component "${componentName}" does not exist`);
                }
            });
        });
    }
}
exports.ConversionShortcutsValidator = ConversionShortcutsValidator;
//# sourceMappingURL=conversion-shortcuts-validator.js.map