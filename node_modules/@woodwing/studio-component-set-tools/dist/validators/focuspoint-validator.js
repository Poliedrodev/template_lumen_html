"use strict";
/**
 * Validates usage of focuspoint of image-editor property
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FocuspointValidator = void 0;
const validator_1 = require("./validator");
class FocuspointValidator extends validator_1.Validator {
    validate() {
        return __awaiter(this, void 0, void 0, function* () {
            for (const component of Object.values(this.componentSet.components)) {
                component.properties.forEach((parsedProperty) => {
                    if (parsedProperty.control.type === 'image-editor' &&
                        parsedProperty.control.focuspoint &&
                        parsedProperty.directiveKey && // skip, it's covered in other validator
                        component.directives[parsedProperty.directiveKey] && // skip, it's covered in other validator
                        component.directives[parsedProperty.directiveKey].tag === 'img') {
                        this.error(`Property "${parsedProperty.name}" of component "${component.name}" uses ` +
                            `"focuspoint" feature on <img> html tag, which is not supported, "focuspoint" can be applied to other html tags, where` +
                            `image is a background`);
                    }
                });
            }
        });
    }
}
exports.FocuspointValidator = FocuspointValidator;
//# sourceMappingURL=focuspoint-validator.js.map